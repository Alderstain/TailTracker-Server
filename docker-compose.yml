services:
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mosquitto
    hostname: mosquitto
    ports:
      - "1883:1883"  # MQTT
      - "9001:9001"  # WebSocket (для MQTT over WS)
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - mosquitto_data:/mosquitto/data
    networks:
      - sensor_net
    restart: unless-stopped

  telegraf:
    image: telegraf:1.27
    container_name: telegraf
    hostname: telegraf
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    depends_on:
      - mosquitto
      - influxdb
    networks:
      - sensor_net
    restart: unless-stopped

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    hostname: influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=my-org
      - DOCKER_INFLUXDB_INIT_BUCKET=sensors
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-token
    volumes:
      - influxdb_data:/var/lib/influxdb2
    ports:
      - "8086:8086"
    networks:
      - sensor_net
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    hostname: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_DEFAULT_THEME=light
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - influxdb
    ports:
      - "3000:3000"
    networks:
      - sensor_net
    restart: unless-stopped

networks:
  sensor_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

volumes:
  mosquitto_data:
  influxdb_data:
  grafana_data: